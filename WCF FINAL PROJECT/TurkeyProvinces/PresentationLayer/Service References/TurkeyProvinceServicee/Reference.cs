//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PresentationLayer.TurkeyProvinceServicee {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="City", Namespace="http://schemas.datacontract.org/2004/07/DataLayer")]
    [System.SerializableAttribute()]
    public partial class City : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PartyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PlaceToVisitIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PlateCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PopulationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RegionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TransportationServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> WhatFamousIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityID {
            get {
                return this.CityIDField;
            }
            set {
                if ((this.CityIDField.Equals(value) != true)) {
                    this.CityIDField = value;
                    this.RaisePropertyChanged("CityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PartyID {
            get {
                return this.PartyIDField;
            }
            set {
                if ((this.PartyIDField.Equals(value) != true)) {
                    this.PartyIDField = value;
                    this.RaisePropertyChanged("PartyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Picture {
            get {
                return this.PictureField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureField, value) != true)) {
                    this.PictureField = value;
                    this.RaisePropertyChanged("Picture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PlaceToVisitID {
            get {
                return this.PlaceToVisitIDField;
            }
            set {
                if ((this.PlaceToVisitIDField.Equals(value) != true)) {
                    this.PlaceToVisitIDField = value;
                    this.RaisePropertyChanged("PlaceToVisitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PlateCode {
            get {
                return this.PlateCodeField;
            }
            set {
                if ((this.PlateCodeField.Equals(value) != true)) {
                    this.PlateCodeField = value;
                    this.RaisePropertyChanged("PlateCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Population {
            get {
                return this.PopulationField;
            }
            set {
                if ((object.ReferenceEquals(this.PopulationField, value) != true)) {
                    this.PopulationField = value;
                    this.RaisePropertyChanged("Population");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RegionID {
            get {
                return this.RegionIDField;
            }
            set {
                if ((this.RegionIDField.Equals(value) != true)) {
                    this.RegionIDField = value;
                    this.RaisePropertyChanged("RegionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TransportationServiceID {
            get {
                return this.TransportationServiceIDField;
            }
            set {
                if ((this.TransportationServiceIDField.Equals(value) != true)) {
                    this.TransportationServiceIDField = value;
                    this.RaisePropertyChanged("TransportationServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> WhatFamousID {
            get {
                return this.WhatFamousIDField;
            }
            set {
                if ((this.WhatFamousIDField.Equals(value) != true)) {
                    this.WhatFamousIDField = value;
                    this.RaisePropertyChanged("WhatFamousID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Town", Namespace="http://schemas.datacontract.org/2004/07/DataLayer")]
    [System.SerializableAttribute()]
    public partial class Town : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PartyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PlaceToVisitIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PopulationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TownIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TownNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TransportationServiceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> WhatFamousIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CityID {
            get {
                return this.CityIDField;
            }
            set {
                if ((this.CityIDField.Equals(value) != true)) {
                    this.CityIDField = value;
                    this.RaisePropertyChanged("CityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PartyID {
            get {
                return this.PartyIDField;
            }
            set {
                if ((this.PartyIDField.Equals(value) != true)) {
                    this.PartyIDField = value;
                    this.RaisePropertyChanged("PartyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Picture {
            get {
                return this.PictureField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureField, value) != true)) {
                    this.PictureField = value;
                    this.RaisePropertyChanged("Picture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PlaceToVisitID {
            get {
                return this.PlaceToVisitIDField;
            }
            set {
                if ((this.PlaceToVisitIDField.Equals(value) != true)) {
                    this.PlaceToVisitIDField = value;
                    this.RaisePropertyChanged("PlaceToVisitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Population {
            get {
                return this.PopulationField;
            }
            set {
                if ((object.ReferenceEquals(this.PopulationField, value) != true)) {
                    this.PopulationField = value;
                    this.RaisePropertyChanged("Population");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TownID {
            get {
                return this.TownIDField;
            }
            set {
                if ((this.TownIDField.Equals(value) != true)) {
                    this.TownIDField = value;
                    this.RaisePropertyChanged("TownID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TownName {
            get {
                return this.TownNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TownNameField, value) != true)) {
                    this.TownNameField = value;
                    this.RaisePropertyChanged("TownName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TransportationServiceID {
            get {
                return this.TransportationServiceIDField;
            }
            set {
                if ((this.TransportationServiceIDField.Equals(value) != true)) {
                    this.TransportationServiceIDField = value;
                    this.RaisePropertyChanged("TransportationServiceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> WhatFamousID {
            get {
                return this.WhatFamousIDField;
            }
            set {
                if ((this.WhatFamousIDField.Equals(value) != true)) {
                    this.WhatFamousIDField = value;
                    this.RaisePropertyChanged("WhatFamousID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Village", Namespace="http://schemas.datacontract.org/2004/07/DataLayer")]
    [System.SerializableAttribute()]
    public partial class Village : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PlaceToVisitIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PopulationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TownIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VillageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VillageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> WhatFamousIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Picture {
            get {
                return this.PictureField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureField, value) != true)) {
                    this.PictureField = value;
                    this.RaisePropertyChanged("Picture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PlaceToVisitID {
            get {
                return this.PlaceToVisitIDField;
            }
            set {
                if ((this.PlaceToVisitIDField.Equals(value) != true)) {
                    this.PlaceToVisitIDField = value;
                    this.RaisePropertyChanged("PlaceToVisitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Population {
            get {
                return this.PopulationField;
            }
            set {
                if ((object.ReferenceEquals(this.PopulationField, value) != true)) {
                    this.PopulationField = value;
                    this.RaisePropertyChanged("Population");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TownID {
            get {
                return this.TownIDField;
            }
            set {
                if ((this.TownIDField.Equals(value) != true)) {
                    this.TownIDField = value;
                    this.RaisePropertyChanged("TownID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VillageID {
            get {
                return this.VillageIDField;
            }
            set {
                if ((this.VillageIDField.Equals(value) != true)) {
                    this.VillageIDField = value;
                    this.RaisePropertyChanged("VillageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VillageName {
            get {
                return this.VillageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VillageNameField, value) != true)) {
                    this.VillageNameField = value;
                    this.RaisePropertyChanged("VillageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> WhatFamousID {
            get {
                return this.WhatFamousIDField;
            }
            set {
                if ((this.WhatFamousIDField.Equals(value) != true)) {
                    this.WhatFamousIDField = value;
                    this.RaisePropertyChanged("WhatFamousID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Region", Namespace="http://schemas.datacontract.org/2004/07/DataLayer")]
    [System.SerializableAttribute()]
    public partial class Region : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegionID {
            get {
                return this.RegionIDField;
            }
            set {
                if ((this.RegionIDField.Equals(value) != true)) {
                    this.RegionIDField = value;
                    this.RaisePropertyChanged("RegionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlacesToVisit", Namespace="http://schemas.datacontract.org/2004/07/DataLayer")]
    [System.SerializableAttribute()]
    public partial class PlacesToVisit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlaceToVisitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlaceToVisitIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlaceToVisit {
            get {
                return this.PlaceToVisitField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaceToVisitField, value) != true)) {
                    this.PlaceToVisitField = value;
                    this.RaisePropertyChanged("PlaceToVisit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlaceToVisitID {
            get {
                return this.PlaceToVisitIDField;
            }
            set {
                if ((this.PlaceToVisitIDField.Equals(value) != true)) {
                    this.PlaceToVisitIDField = value;
                    this.RaisePropertyChanged("PlaceToVisitID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WhatFamou", Namespace="http://schemas.datacontract.org/2004/07/DataLayer")]
    [System.SerializableAttribute()]
    public partial class WhatFamou : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WhatFamousField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WhatFamousIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WhatFamous {
            get {
                return this.WhatFamousField;
            }
            set {
                if ((object.ReferenceEquals(this.WhatFamousField, value) != true)) {
                    this.WhatFamousField = value;
                    this.RaisePropertyChanged("WhatFamous");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WhatFamousID {
            get {
                return this.WhatFamousIDField;
            }
            set {
                if ((this.WhatFamousIDField.Equals(value) != true)) {
                    this.WhatFamousIDField = value;
                    this.RaisePropertyChanged("WhatFamousID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransportationService", Namespace="http://schemas.datacontract.org/2004/07/DataLayer")]
    [System.SerializableAttribute()]
    public partial class TransportationService : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransportationService1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransportationServicesIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransportationService1 {
            get {
                return this.TransportationService1Field;
            }
            set {
                if ((object.ReferenceEquals(this.TransportationService1Field, value) != true)) {
                    this.TransportationService1Field = value;
                    this.RaisePropertyChanged("TransportationService1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransportationServicesID {
            get {
                return this.TransportationServicesIDField;
            }
            set {
                if ((this.TransportationServicesIDField.Equals(value) != true)) {
                    this.TransportationServicesIDField = value;
                    this.RaisePropertyChanged("TransportationServicesID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/DataLayer")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Photo {
            get {
                return this.PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoField, value) != true)) {
                    this.PhotoField = value;
                    this.RaisePropertyChanged("Photo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RulingParty", Namespace="http://schemas.datacontract.org/2004/07/DataLayer")]
    [System.SerializableAttribute()]
    public partial class RulingParty : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PartyIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Party {
            get {
                return this.PartyField;
            }
            set {
                if ((object.ReferenceEquals(this.PartyField, value) != true)) {
                    this.PartyField = value;
                    this.RaisePropertyChanged("Party");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PartyID {
            get {
                return this.PartyIDField;
            }
            set {
                if ((this.PartyIDField.Equals(value) != true)) {
                    this.PartyIDField = value;
                    this.RaisePropertyChanged("PartyID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TurkeyProvinceServicee.IServiceContract")]
    public interface IServiceContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/AddCity", ReplyAction="http://tempuri.org/IServiceContract/AddCityResponse")]
        void AddCity(PresentationLayer.TurkeyProvinceServicee.City cty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/AddCity", ReplyAction="http://tempuri.org/IServiceContract/AddCityResponse")]
        System.Threading.Tasks.Task AddCityAsync(PresentationLayer.TurkeyProvinceServicee.City cty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/UpdateCity", ReplyAction="http://tempuri.org/IServiceContract/UpdateCityResponse")]
        void UpdateCity(PresentationLayer.TurkeyProvinceServicee.City cty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/UpdateCity", ReplyAction="http://tempuri.org/IServiceContract/UpdateCityResponse")]
        System.Threading.Tasks.Task UpdateCityAsync(PresentationLayer.TurkeyProvinceServicee.City cty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/DeleteCity", ReplyAction="http://tempuri.org/IServiceContract/DeleteCityResponse")]
        void DeleteCity(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/DeleteCity", ReplyAction="http://tempuri.org/IServiceContract/DeleteCityResponse")]
        System.Threading.Tasks.Task DeleteCityAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/ListCity", ReplyAction="http://tempuri.org/IServiceContract/ListCityResponse")]
        PresentationLayer.TurkeyProvinceServicee.City[] ListCity();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/ListCity", ReplyAction="http://tempuri.org/IServiceContract/ListCityResponse")]
        System.Threading.Tasks.Task<PresentationLayer.TurkeyProvinceServicee.City[]> ListCityAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/AddTown", ReplyAction="http://tempuri.org/IServiceContract/AddTownResponse")]
        void AddTown(PresentationLayer.TurkeyProvinceServicee.Town twn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/AddTown", ReplyAction="http://tempuri.org/IServiceContract/AddTownResponse")]
        System.Threading.Tasks.Task AddTownAsync(PresentationLayer.TurkeyProvinceServicee.Town twn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/UpdateTown", ReplyAction="http://tempuri.org/IServiceContract/UpdateTownResponse")]
        void UpdateTown(PresentationLayer.TurkeyProvinceServicee.Town twn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/UpdateTown", ReplyAction="http://tempuri.org/IServiceContract/UpdateTownResponse")]
        System.Threading.Tasks.Task UpdateTownAsync(PresentationLayer.TurkeyProvinceServicee.Town twn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/DeleteTown", ReplyAction="http://tempuri.org/IServiceContract/DeleteTownResponse")]
        void DeleteTown(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/DeleteTown", ReplyAction="http://tempuri.org/IServiceContract/DeleteTownResponse")]
        System.Threading.Tasks.Task DeleteTownAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/ListTown", ReplyAction="http://tempuri.org/IServiceContract/ListTownResponse")]
        PresentationLayer.TurkeyProvinceServicee.Town[] ListTown();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/ListTown", ReplyAction="http://tempuri.org/IServiceContract/ListTownResponse")]
        System.Threading.Tasks.Task<PresentationLayer.TurkeyProvinceServicee.Town[]> ListTownAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/AddVillage", ReplyAction="http://tempuri.org/IServiceContract/AddVillageResponse")]
        void AddVillage(PresentationLayer.TurkeyProvinceServicee.Village vllage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/AddVillage", ReplyAction="http://tempuri.org/IServiceContract/AddVillageResponse")]
        System.Threading.Tasks.Task AddVillageAsync(PresentationLayer.TurkeyProvinceServicee.Village vllage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/UpdateVillage", ReplyAction="http://tempuri.org/IServiceContract/UpdateVillageResponse")]
        void UpdateVillage(PresentationLayer.TurkeyProvinceServicee.Village vllage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/UpdateVillage", ReplyAction="http://tempuri.org/IServiceContract/UpdateVillageResponse")]
        System.Threading.Tasks.Task UpdateVillageAsync(PresentationLayer.TurkeyProvinceServicee.Village vllage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/DeleteVillage", ReplyAction="http://tempuri.org/IServiceContract/DeleteVillageResponse")]
        void DeleteVillage(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/DeleteVillage", ReplyAction="http://tempuri.org/IServiceContract/DeleteVillageResponse")]
        System.Threading.Tasks.Task DeleteVillageAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/ListVillage", ReplyAction="http://tempuri.org/IServiceContract/ListVillageResponse")]
        PresentationLayer.TurkeyProvinceServicee.Village[] ListVillage();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/ListVillage", ReplyAction="http://tempuri.org/IServiceContract/ListVillageResponse")]
        System.Threading.Tasks.Task<PresentationLayer.TurkeyProvinceServicee.Village[]> ListVillageAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/AddRegion", ReplyAction="http://tempuri.org/IServiceContract/AddRegionResponse")]
        void AddRegion(PresentationLayer.TurkeyProvinceServicee.Region reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/AddRegion", ReplyAction="http://tempuri.org/IServiceContract/AddRegionResponse")]
        System.Threading.Tasks.Task AddRegionAsync(PresentationLayer.TurkeyProvinceServicee.Region reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/UpdateRegion", ReplyAction="http://tempuri.org/IServiceContract/UpdateRegionResponse")]
        void UpdateRegion(PresentationLayer.TurkeyProvinceServicee.Region reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/UpdateRegion", ReplyAction="http://tempuri.org/IServiceContract/UpdateRegionResponse")]
        System.Threading.Tasks.Task UpdateRegionAsync(PresentationLayer.TurkeyProvinceServicee.Region reg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/DeleteRegion", ReplyAction="http://tempuri.org/IServiceContract/DeleteRegionResponse")]
        void DeleteRegion(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/DeleteRegion", ReplyAction="http://tempuri.org/IServiceContract/DeleteRegionResponse")]
        System.Threading.Tasks.Task DeleteRegionAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/ListRegion", ReplyAction="http://tempuri.org/IServiceContract/ListRegionResponse")]
        PresentationLayer.TurkeyProvinceServicee.Region[] ListRegion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/ListRegion", ReplyAction="http://tempuri.org/IServiceContract/ListRegionResponse")]
        System.Threading.Tasks.Task<PresentationLayer.TurkeyProvinceServicee.Region[]> ListRegionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/AddPlacesToVisit", ReplyAction="http://tempuri.org/IServiceContract/AddPlacesToVisitResponse")]
        void AddPlacesToVisit(PresentationLayer.TurkeyProvinceServicee.PlacesToVisit vst);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/AddPlacesToVisit", ReplyAction="http://tempuri.org/IServiceContract/AddPlacesToVisitResponse")]
        System.Threading.Tasks.Task AddPlacesToVisitAsync(PresentationLayer.TurkeyProvinceServicee.PlacesToVisit vst);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/UpdatePlacesToVisit", ReplyAction="http://tempuri.org/IServiceContract/UpdatePlacesToVisitResponse")]
        void UpdatePlacesToVisit(PresentationLayer.TurkeyProvinceServicee.PlacesToVisit vst);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/UpdatePlacesToVisit", ReplyAction="http://tempuri.org/IServiceContract/UpdatePlacesToVisitResponse")]
        System.Threading.Tasks.Task UpdatePlacesToVisitAsync(PresentationLayer.TurkeyProvinceServicee.PlacesToVisit vst);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/DeletePlacesToVisit", ReplyAction="http://tempuri.org/IServiceContract/DeletePlacesToVisitResponse")]
        void DeletePlacesToVisit(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/DeletePlacesToVisit", ReplyAction="http://tempuri.org/IServiceContract/DeletePlacesToVisitResponse")]
        System.Threading.Tasks.Task DeletePlacesToVisitAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/ListPlacesToVisit", ReplyAction="http://tempuri.org/IServiceContract/ListPlacesToVisitResponse")]
        PresentationLayer.TurkeyProvinceServicee.PlacesToVisit[] ListPlacesToVisit();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/ListPlacesToVisit", ReplyAction="http://tempuri.org/IServiceContract/ListPlacesToVisitResponse")]
        System.Threading.Tasks.Task<PresentationLayer.TurkeyProvinceServicee.PlacesToVisit[]> ListPlacesToVisitAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/AddWhatFamou", ReplyAction="http://tempuri.org/IServiceContract/AddWhatFamouResponse")]
        void AddWhatFamou(PresentationLayer.TurkeyProvinceServicee.WhatFamou famou);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/AddWhatFamou", ReplyAction="http://tempuri.org/IServiceContract/AddWhatFamouResponse")]
        System.Threading.Tasks.Task AddWhatFamouAsync(PresentationLayer.TurkeyProvinceServicee.WhatFamou famou);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/UpdateWhatFamou", ReplyAction="http://tempuri.org/IServiceContract/UpdateWhatFamouResponse")]
        void UpdateWhatFamou(PresentationLayer.TurkeyProvinceServicee.WhatFamou famou);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/UpdateWhatFamou", ReplyAction="http://tempuri.org/IServiceContract/UpdateWhatFamouResponse")]
        System.Threading.Tasks.Task UpdateWhatFamouAsync(PresentationLayer.TurkeyProvinceServicee.WhatFamou famou);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/DeleteWhatFamou", ReplyAction="http://tempuri.org/IServiceContract/DeleteWhatFamouResponse")]
        void DeleteWhatFamou(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/DeleteWhatFamou", ReplyAction="http://tempuri.org/IServiceContract/DeleteWhatFamouResponse")]
        System.Threading.Tasks.Task DeleteWhatFamouAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/ListWhatFamou", ReplyAction="http://tempuri.org/IServiceContract/ListWhatFamouResponse")]
        PresentationLayer.TurkeyProvinceServicee.WhatFamou[] ListWhatFamou();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/ListWhatFamou", ReplyAction="http://tempuri.org/IServiceContract/ListWhatFamouResponse")]
        System.Threading.Tasks.Task<PresentationLayer.TurkeyProvinceServicee.WhatFamou[]> ListWhatFamouAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/AddTransportationService", ReplyAction="http://tempuri.org/IServiceContract/AddTransportationServiceResponse")]
        void AddTransportationService(PresentationLayer.TurkeyProvinceServicee.TransportationService srvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/AddTransportationService", ReplyAction="http://tempuri.org/IServiceContract/AddTransportationServiceResponse")]
        System.Threading.Tasks.Task AddTransportationServiceAsync(PresentationLayer.TurkeyProvinceServicee.TransportationService srvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/UpdateTransportationService", ReplyAction="http://tempuri.org/IServiceContract/UpdateTransportationServiceResponse")]
        void UpdateTransportationService(PresentationLayer.TurkeyProvinceServicee.TransportationService srvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/UpdateTransportationService", ReplyAction="http://tempuri.org/IServiceContract/UpdateTransportationServiceResponse")]
        System.Threading.Tasks.Task UpdateTransportationServiceAsync(PresentationLayer.TurkeyProvinceServicee.TransportationService srvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/DeleteTransportationService", ReplyAction="http://tempuri.org/IServiceContract/DeleteTransportationServiceResponse")]
        void DeleteTransportationService(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/DeleteTransportationService", ReplyAction="http://tempuri.org/IServiceContract/DeleteTransportationServiceResponse")]
        System.Threading.Tasks.Task DeleteTransportationServiceAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/ListTransportationService", ReplyAction="http://tempuri.org/IServiceContract/ListTransportationServiceResponse")]
        PresentationLayer.TurkeyProvinceServicee.TransportationService[] ListTransportationService();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/ListTransportationService", ReplyAction="http://tempuri.org/IServiceContract/ListTransportationServiceResponse")]
        System.Threading.Tasks.Task<PresentationLayer.TurkeyProvinceServicee.TransportationService[]> ListTransportationServiceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/AddUser", ReplyAction="http://tempuri.org/IServiceContract/AddUserResponse")]
        void AddUser(PresentationLayer.TurkeyProvinceServicee.User usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/AddUser", ReplyAction="http://tempuri.org/IServiceContract/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(PresentationLayer.TurkeyProvinceServicee.User usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/UpdateUser", ReplyAction="http://tempuri.org/IServiceContract/UpdateUserResponse")]
        void UpdateUser(PresentationLayer.TurkeyProvinceServicee.User usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/UpdateUser", ReplyAction="http://tempuri.org/IServiceContract/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(PresentationLayer.TurkeyProvinceServicee.User usr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/DeleteUser", ReplyAction="http://tempuri.org/IServiceContract/DeleteUserResponse")]
        void DeleteUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/DeleteUser", ReplyAction="http://tempuri.org/IServiceContract/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/ListUser", ReplyAction="http://tempuri.org/IServiceContract/ListUserResponse")]
        PresentationLayer.TurkeyProvinceServicee.User[] ListUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/ListUser", ReplyAction="http://tempuri.org/IServiceContract/ListUserResponse")]
        System.Threading.Tasks.Task<PresentationLayer.TurkeyProvinceServicee.User[]> ListUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/AddRulingParty", ReplyAction="http://tempuri.org/IServiceContract/AddRulingPartyResponse")]
        void AddRulingParty(PresentationLayer.TurkeyProvinceServicee.RulingParty prty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/AddRulingParty", ReplyAction="http://tempuri.org/IServiceContract/AddRulingPartyResponse")]
        System.Threading.Tasks.Task AddRulingPartyAsync(PresentationLayer.TurkeyProvinceServicee.RulingParty prty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/UpdateRulingParty", ReplyAction="http://tempuri.org/IServiceContract/UpdateRulingPartyResponse")]
        void UpdateRulingParty(PresentationLayer.TurkeyProvinceServicee.RulingParty prty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/UpdateRulingParty", ReplyAction="http://tempuri.org/IServiceContract/UpdateRulingPartyResponse")]
        System.Threading.Tasks.Task UpdateRulingPartyAsync(PresentationLayer.TurkeyProvinceServicee.RulingParty prty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/DeleteRulingParty", ReplyAction="http://tempuri.org/IServiceContract/DeleteRulingPartyResponse")]
        void DeleteRulingParty(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/DeleteRulingParty", ReplyAction="http://tempuri.org/IServiceContract/DeleteRulingPartyResponse")]
        System.Threading.Tasks.Task DeleteRulingPartyAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/ListRulingParty", ReplyAction="http://tempuri.org/IServiceContract/ListRulingPartyResponse")]
        PresentationLayer.TurkeyProvinceServicee.RulingParty[] ListRulingParty();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/ListRulingParty", ReplyAction="http://tempuri.org/IServiceContract/ListRulingPartyResponse")]
        System.Threading.Tasks.Task<PresentationLayer.TurkeyProvinceServicee.RulingParty[]> ListRulingPartyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/Login", ReplyAction="http://tempuri.org/IServiceContract/LoginResponse")]
        bool Login(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/Login", ReplyAction="http://tempuri.org/IServiceContract/LoginResponse")]
        System.Threading.Tasks.Task<bool> LoginAsync(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/ListByBool", ReplyAction="http://tempuri.org/IServiceContract/ListByBoolResponse")]
        PresentationLayer.TurkeyProvinceServicee.User[] ListByBool(bool isactive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/ListByBool", ReplyAction="http://tempuri.org/IServiceContract/ListByBoolResponse")]
        System.Threading.Tasks.Task<PresentationLayer.TurkeyProvinceServicee.User[]> ListByBoolAsync(bool isactive);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceContractChannel : PresentationLayer.TurkeyProvinceServicee.IServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceContractClient : System.ServiceModel.ClientBase<PresentationLayer.TurkeyProvinceServicee.IServiceContract>, PresentationLayer.TurkeyProvinceServicee.IServiceContract {
        
        public ServiceContractClient() {
        }
        
        public ServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddCity(PresentationLayer.TurkeyProvinceServicee.City cty) {
            base.Channel.AddCity(cty);
        }
        
        public System.Threading.Tasks.Task AddCityAsync(PresentationLayer.TurkeyProvinceServicee.City cty) {
            return base.Channel.AddCityAsync(cty);
        }
        
        public void UpdateCity(PresentationLayer.TurkeyProvinceServicee.City cty) {
            base.Channel.UpdateCity(cty);
        }
        
        public System.Threading.Tasks.Task UpdateCityAsync(PresentationLayer.TurkeyProvinceServicee.City cty) {
            return base.Channel.UpdateCityAsync(cty);
        }
        
        public void DeleteCity(int id) {
            base.Channel.DeleteCity(id);
        }
        
        public System.Threading.Tasks.Task DeleteCityAsync(int id) {
            return base.Channel.DeleteCityAsync(id);
        }
        
        public PresentationLayer.TurkeyProvinceServicee.City[] ListCity() {
            return base.Channel.ListCity();
        }
        
        public System.Threading.Tasks.Task<PresentationLayer.TurkeyProvinceServicee.City[]> ListCityAsync() {
            return base.Channel.ListCityAsync();
        }
        
        public void AddTown(PresentationLayer.TurkeyProvinceServicee.Town twn) {
            base.Channel.AddTown(twn);
        }
        
        public System.Threading.Tasks.Task AddTownAsync(PresentationLayer.TurkeyProvinceServicee.Town twn) {
            return base.Channel.AddTownAsync(twn);
        }
        
        public void UpdateTown(PresentationLayer.TurkeyProvinceServicee.Town twn) {
            base.Channel.UpdateTown(twn);
        }
        
        public System.Threading.Tasks.Task UpdateTownAsync(PresentationLayer.TurkeyProvinceServicee.Town twn) {
            return base.Channel.UpdateTownAsync(twn);
        }
        
        public void DeleteTown(int id) {
            base.Channel.DeleteTown(id);
        }
        
        public System.Threading.Tasks.Task DeleteTownAsync(int id) {
            return base.Channel.DeleteTownAsync(id);
        }
        
        public PresentationLayer.TurkeyProvinceServicee.Town[] ListTown() {
            return base.Channel.ListTown();
        }
        
        public System.Threading.Tasks.Task<PresentationLayer.TurkeyProvinceServicee.Town[]> ListTownAsync() {
            return base.Channel.ListTownAsync();
        }
        
        public void AddVillage(PresentationLayer.TurkeyProvinceServicee.Village vllage) {
            base.Channel.AddVillage(vllage);
        }
        
        public System.Threading.Tasks.Task AddVillageAsync(PresentationLayer.TurkeyProvinceServicee.Village vllage) {
            return base.Channel.AddVillageAsync(vllage);
        }
        
        public void UpdateVillage(PresentationLayer.TurkeyProvinceServicee.Village vllage) {
            base.Channel.UpdateVillage(vllage);
        }
        
        public System.Threading.Tasks.Task UpdateVillageAsync(PresentationLayer.TurkeyProvinceServicee.Village vllage) {
            return base.Channel.UpdateVillageAsync(vllage);
        }
        
        public void DeleteVillage(int id) {
            base.Channel.DeleteVillage(id);
        }
        
        public System.Threading.Tasks.Task DeleteVillageAsync(int id) {
            return base.Channel.DeleteVillageAsync(id);
        }
        
        public PresentationLayer.TurkeyProvinceServicee.Village[] ListVillage() {
            return base.Channel.ListVillage();
        }
        
        public System.Threading.Tasks.Task<PresentationLayer.TurkeyProvinceServicee.Village[]> ListVillageAsync() {
            return base.Channel.ListVillageAsync();
        }
        
        public void AddRegion(PresentationLayer.TurkeyProvinceServicee.Region reg) {
            base.Channel.AddRegion(reg);
        }
        
        public System.Threading.Tasks.Task AddRegionAsync(PresentationLayer.TurkeyProvinceServicee.Region reg) {
            return base.Channel.AddRegionAsync(reg);
        }
        
        public void UpdateRegion(PresentationLayer.TurkeyProvinceServicee.Region reg) {
            base.Channel.UpdateRegion(reg);
        }
        
        public System.Threading.Tasks.Task UpdateRegionAsync(PresentationLayer.TurkeyProvinceServicee.Region reg) {
            return base.Channel.UpdateRegionAsync(reg);
        }
        
        public void DeleteRegion(int id) {
            base.Channel.DeleteRegion(id);
        }
        
        public System.Threading.Tasks.Task DeleteRegionAsync(int id) {
            return base.Channel.DeleteRegionAsync(id);
        }
        
        public PresentationLayer.TurkeyProvinceServicee.Region[] ListRegion() {
            return base.Channel.ListRegion();
        }
        
        public System.Threading.Tasks.Task<PresentationLayer.TurkeyProvinceServicee.Region[]> ListRegionAsync() {
            return base.Channel.ListRegionAsync();
        }
        
        public void AddPlacesToVisit(PresentationLayer.TurkeyProvinceServicee.PlacesToVisit vst) {
            base.Channel.AddPlacesToVisit(vst);
        }
        
        public System.Threading.Tasks.Task AddPlacesToVisitAsync(PresentationLayer.TurkeyProvinceServicee.PlacesToVisit vst) {
            return base.Channel.AddPlacesToVisitAsync(vst);
        }
        
        public void UpdatePlacesToVisit(PresentationLayer.TurkeyProvinceServicee.PlacesToVisit vst) {
            base.Channel.UpdatePlacesToVisit(vst);
        }
        
        public System.Threading.Tasks.Task UpdatePlacesToVisitAsync(PresentationLayer.TurkeyProvinceServicee.PlacesToVisit vst) {
            return base.Channel.UpdatePlacesToVisitAsync(vst);
        }
        
        public void DeletePlacesToVisit(int id) {
            base.Channel.DeletePlacesToVisit(id);
        }
        
        public System.Threading.Tasks.Task DeletePlacesToVisitAsync(int id) {
            return base.Channel.DeletePlacesToVisitAsync(id);
        }
        
        public PresentationLayer.TurkeyProvinceServicee.PlacesToVisit[] ListPlacesToVisit() {
            return base.Channel.ListPlacesToVisit();
        }
        
        public System.Threading.Tasks.Task<PresentationLayer.TurkeyProvinceServicee.PlacesToVisit[]> ListPlacesToVisitAsync() {
            return base.Channel.ListPlacesToVisitAsync();
        }
        
        public void AddWhatFamou(PresentationLayer.TurkeyProvinceServicee.WhatFamou famou) {
            base.Channel.AddWhatFamou(famou);
        }
        
        public System.Threading.Tasks.Task AddWhatFamouAsync(PresentationLayer.TurkeyProvinceServicee.WhatFamou famou) {
            return base.Channel.AddWhatFamouAsync(famou);
        }
        
        public void UpdateWhatFamou(PresentationLayer.TurkeyProvinceServicee.WhatFamou famou) {
            base.Channel.UpdateWhatFamou(famou);
        }
        
        public System.Threading.Tasks.Task UpdateWhatFamouAsync(PresentationLayer.TurkeyProvinceServicee.WhatFamou famou) {
            return base.Channel.UpdateWhatFamouAsync(famou);
        }
        
        public void DeleteWhatFamou(int id) {
            base.Channel.DeleteWhatFamou(id);
        }
        
        public System.Threading.Tasks.Task DeleteWhatFamouAsync(int id) {
            return base.Channel.DeleteWhatFamouAsync(id);
        }
        
        public PresentationLayer.TurkeyProvinceServicee.WhatFamou[] ListWhatFamou() {
            return base.Channel.ListWhatFamou();
        }
        
        public System.Threading.Tasks.Task<PresentationLayer.TurkeyProvinceServicee.WhatFamou[]> ListWhatFamouAsync() {
            return base.Channel.ListWhatFamouAsync();
        }
        
        public void AddTransportationService(PresentationLayer.TurkeyProvinceServicee.TransportationService srvc) {
            base.Channel.AddTransportationService(srvc);
        }
        
        public System.Threading.Tasks.Task AddTransportationServiceAsync(PresentationLayer.TurkeyProvinceServicee.TransportationService srvc) {
            return base.Channel.AddTransportationServiceAsync(srvc);
        }
        
        public void UpdateTransportationService(PresentationLayer.TurkeyProvinceServicee.TransportationService srvc) {
            base.Channel.UpdateTransportationService(srvc);
        }
        
        public System.Threading.Tasks.Task UpdateTransportationServiceAsync(PresentationLayer.TurkeyProvinceServicee.TransportationService srvc) {
            return base.Channel.UpdateTransportationServiceAsync(srvc);
        }
        
        public void DeleteTransportationService(int id) {
            base.Channel.DeleteTransportationService(id);
        }
        
        public System.Threading.Tasks.Task DeleteTransportationServiceAsync(int id) {
            return base.Channel.DeleteTransportationServiceAsync(id);
        }
        
        public PresentationLayer.TurkeyProvinceServicee.TransportationService[] ListTransportationService() {
            return base.Channel.ListTransportationService();
        }
        
        public System.Threading.Tasks.Task<PresentationLayer.TurkeyProvinceServicee.TransportationService[]> ListTransportationServiceAsync() {
            return base.Channel.ListTransportationServiceAsync();
        }
        
        public void AddUser(PresentationLayer.TurkeyProvinceServicee.User usr) {
            base.Channel.AddUser(usr);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(PresentationLayer.TurkeyProvinceServicee.User usr) {
            return base.Channel.AddUserAsync(usr);
        }
        
        public void UpdateUser(PresentationLayer.TurkeyProvinceServicee.User usr) {
            base.Channel.UpdateUser(usr);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(PresentationLayer.TurkeyProvinceServicee.User usr) {
            return base.Channel.UpdateUserAsync(usr);
        }
        
        public void DeleteUser(int id) {
            base.Channel.DeleteUser(id);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(int id) {
            return base.Channel.DeleteUserAsync(id);
        }
        
        public PresentationLayer.TurkeyProvinceServicee.User[] ListUser() {
            return base.Channel.ListUser();
        }
        
        public System.Threading.Tasks.Task<PresentationLayer.TurkeyProvinceServicee.User[]> ListUserAsync() {
            return base.Channel.ListUserAsync();
        }
        
        public void AddRulingParty(PresentationLayer.TurkeyProvinceServicee.RulingParty prty) {
            base.Channel.AddRulingParty(prty);
        }
        
        public System.Threading.Tasks.Task AddRulingPartyAsync(PresentationLayer.TurkeyProvinceServicee.RulingParty prty) {
            return base.Channel.AddRulingPartyAsync(prty);
        }
        
        public void UpdateRulingParty(PresentationLayer.TurkeyProvinceServicee.RulingParty prty) {
            base.Channel.UpdateRulingParty(prty);
        }
        
        public System.Threading.Tasks.Task UpdateRulingPartyAsync(PresentationLayer.TurkeyProvinceServicee.RulingParty prty) {
            return base.Channel.UpdateRulingPartyAsync(prty);
        }
        
        public void DeleteRulingParty(int id) {
            base.Channel.DeleteRulingParty(id);
        }
        
        public System.Threading.Tasks.Task DeleteRulingPartyAsync(int id) {
            return base.Channel.DeleteRulingPartyAsync(id);
        }
        
        public PresentationLayer.TurkeyProvinceServicee.RulingParty[] ListRulingParty() {
            return base.Channel.ListRulingParty();
        }
        
        public System.Threading.Tasks.Task<PresentationLayer.TurkeyProvinceServicee.RulingParty[]> ListRulingPartyAsync() {
            return base.Channel.ListRulingPartyAsync();
        }
        
        public bool Login(string UserName, string Password) {
            return base.Channel.Login(UserName, Password);
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync(string UserName, string Password) {
            return base.Channel.LoginAsync(UserName, Password);
        }
        
        public PresentationLayer.TurkeyProvinceServicee.User[] ListByBool(bool isactive) {
            return base.Channel.ListByBool(isactive);
        }
        
        public System.Threading.Tasks.Task<PresentationLayer.TurkeyProvinceServicee.User[]> ListByBoolAsync(bool isactive) {
            return base.Channel.ListByBoolAsync(isactive);
        }
    }
}
